name: Build Python

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
    paths:
      - ".github/workflows/*.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - ".github/workflows/*.yml"
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, linux, darwin]
        goarch: [amd64, arm64]
        include:
          - goos: linux
            goarch: s390x
          # END S390X
          # END Other architectures
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Show workflow information 
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "::set-output name=ASSET_NAME::$_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build
        run: |
          pyinstaller --onefile --name ${{ env.ASSET_NAME }} main.py
      - name: Create ZIP archive
        run: |
          zip -j ${{ env.ASSET_NAME }}.zip dist/${{ env.ASSET_NAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ASSET_NAME }}
          path: ${{ env.ASSET_NAME }}.zip

      - name: Upload release asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.ASSET_NAME }}.zip
          asset_name: HSVN-Tools-${{ env.ASSET_NAME }}
          asset_content_type: application/octet-stream


